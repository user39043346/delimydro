services:
  api:
    build: .
    restart: unless-stopped
    hostname: api
    ports:
      - 1234:1234
    environment:
      PG_DSN: "host=db user=app password=app dbname=app sslmode=disable"
      JWT_SECRET_KEY: "change_me"
      JAEGER_ADDR: jaeger:4317
      METRICS_ADDR: 0.0.0.0:2112
  nginx:
    build:
      context: .
      dockerfile: ./configs/nginx/Dockerfile
    restart: unless-stopped
    ports:
      - 8080:80
  db:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
      PG_DATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres-data:/var/lib/postgresql/data
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./configs/grafana/datasource.yml:/etc/grafana/provisioning/datasources/main.yml:ro
      - ./configs/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml:ro
      - ./configs/grafana/dashboards:/var/lib/grafana/dashboards
  jaeger:
    image: jaegertracing/all-in-one:1.53
    restart: unless-stopped
    ports:
      - 16686:16686
volumes:
  postgres-data:
